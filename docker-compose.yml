version: '2'
services:
  mysql:
    image: mysql:8.0.32
    container_name: mysql
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=AdminDef
      - MYSQL_DATABASE=kafkaTest
    volumes:
      # - ./initdb.sql:/docker-entrypoint-initdb.d:rw
      - mysql-data:/var/lib/mysql
    networks:
      - db-network
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - kafka-network

  account-service:
    container_name: account-service
    build: ./micro-service/account-service
    ports:
      - 8888:8888
    networks:
      - db-network
      - kafka-network
  
  notification-service:
    container_name: notification-service
    build: ./micro-service/notification-service
    ports:
      - 8081:8081
    networks:
      - db-network
      - kafka-network
  
  statistics-service:
    container_name: statics-service
    build: ./micro-service/statics-service
    ports:
      - 8989:8989
    networks:
      - db-network
      - kafka-network
volumes:
  mysql-data: {}
networks:
  db-network: {}
  kafka-network: {}